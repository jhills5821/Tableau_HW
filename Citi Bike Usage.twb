<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook original-version='18.1' source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='JC-201904-citibike-tripdata' inline='true' name='federated.1iuicnr18bh26314kcikj18vxfbp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='JC-201904-citibike-tripdata' name='textscan.0w93yjq1v7i6zn1dc490q0fl1ish'>
            <connection class='textscan' directory='C:/Users/jeshi/Documents/GitHub/Tableau_HW' filename='JC-201904-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0w93yjq1v7i6zn1dc490q0fl1ish' name='JC-201904-citibike-tripdata.csv' table='[JC-201904-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[JC-201904-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Gender Text' datatype='string' name='[Calculation_654710855967715328]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [gender] = 0 THEN &apos;UNKOWN&apos;&#13;&#10;ELSEIF [gender] = 1 THEN &apos;MALE&apos;&#13;&#10;ELSEIF [gender] = 2 THEN &apos;FEMALE&apos;&#13;&#10;ELSE &apos;UNKNOWN&apos; END' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_654710855970029569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2019-[birth year]' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_654710855971569666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[tripduration]/(60*7.456)' />
      </column>
      <column caption='Duration (mins.)' datatype='real' name='[Calculation_654710855973326851]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[tripduration]/60' />
      </column>
      <column datatype='string' name='[End Station Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[end station name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Bottom 10&quot;'>
            <value>&quot;Amsterdam Ave &amp; W 125 St&quot;</value>
            <value>&quot;Broadway &amp; W 56 St&quot;</value>
            <value>&quot;Christopher St &amp; Greenwich St&quot;</value>
            <value>&quot;E 33 St &amp; 5 Ave&quot;</value>
            <value>&quot;South End Ave &amp; Liberty St&quot;</value>
            <value>&quot;Spruce St &amp; Nassau St&quot;</value>
            <value>&quot;W 15 St &amp; 10 Ave&quot;</value>
            <value>&quot;W 27 St &amp; 10 Ave&quot;</value>
            <value>&quot;W 41 St &amp; 8 Ave&quot;</value>
            <value>&quot;W 84 St &amp; Columbus Ave&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Top 10&quot;'>
            <value>&quot;City Hall&quot;</value>
            <value>&quot;Exchange Place&quot;</value>
            <value>&quot;Grove St PATH&quot;</value>
            <value>&quot;Hamilton Park&quot;</value>
            <value>&quot;Harborside&quot;</value>
            <value>&quot;Marin Light Rail&quot;</value>
            <value>&quot;Newark Ave&quot;</value>
            <value>&quot;Newport PATH&quot;</value>
            <value>&quot;Newport Pkwy&quot;</value>
            <value>&quot;Sip Ave&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Start Station Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[start station name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Bottom 10&quot;'>
            <value>&quot;Christ Hospital&quot;</value>
            <value>&quot;Communipaw &amp; Berry Lane&quot;</value>
            <value>&quot;Dey St&quot;</value>
            <value>&quot;Glenwood Ave&quot;</value>
            <value>&quot;Heights Elevator&quot;</value>
            <value>&quot;Jackson Square&quot;</value>
            <value>&quot;JCBS Depot&quot;</value>
            <value>&quot;Lafayette Park&quot;</value>
            <value>&quot;Riverview Park&quot;</value>
            <value>&quot;Union St&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Top 10&quot;'>
            <value>&quot;City Hall&quot;</value>
            <value>&quot;Exchange Place&quot;</value>
            <value>&quot;Grove St PATH&quot;</value>
            <value>&quot;Hamilton Park&quot;</value>
            <value>&quot;Harborside&quot;</value>
            <value>&quot;Marin Light Rail&quot;</value>
            <value>&quot;Newark Ave&quot;</value>
            <value>&quot;Newport PATH&quot;</value>
            <value>&quot;Newport Pkwy&quot;</value>
            <value>&quot;Sip Ave&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[end station latitude]' derivation='Avg' name='[avg:end station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station longitude]' derivation='Avg' name='[avg:end station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station latitude]' derivation='Avg' name='[avg:start station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station id]' derivation='Count' name='[cnt:end station id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end station id]' derivation='Count' name='[cnt:end station id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station name]' derivation='Count' name='[cnt:end station name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station name]' derivation='Count' name='[cnt:start station name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tripduration]' derivation='Count' name='[cnt:tripduration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[start station id]' derivation='None' name='[none:start station id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_654710855971569666]' derivation='Sum' name='[sum:Calculation_654710855971569666:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_654710855973326851]' derivation='Sum' name='[sum:Calculation_654710855973326851:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bikeid]' derivation='Sum' name='[sum:bikeid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station id]' derivation='Sum' name='[sum:end station id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gender]' derivation='Sum' name='[sum:gender:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station id]' derivation='Sum' name='[sum:start station id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tripduration]' derivation='Sum' name='[sum:tripduration:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (End Station Name,End Station Name (group))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end station name:nk]' />
          <groupfilter function='level-members' level='[End Station Name (group)]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Start Station Name,Start Station Name (group))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start station name:nk]' />
          <groupfilter function='level-members' level='[Start Station Name (group)]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.482997' measure-ordering='alphabetic' measure-percentage='0.517003' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[cnt:start station id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>233</bucket>
            </map>
            <map to='#499894'>
              <bucket>637</bucket>
            </map>
            <map to='#499894'>
              <bucket>1754</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>439</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>874</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>33056</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>135</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>540</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1365</bucket>
            </map>
            <map to='#79706e'>
              <bucket>259</bucket>
            </map>
            <map to='#79706e'>
              <bucket>704</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>237</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>664</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3728</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>176</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>551</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1458</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>347</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>814</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>61</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>463</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>888</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>297</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>773</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>179</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>553</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1509</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>277</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>734</bucket>
            </map>
            <map to='#d37295'>
              <bucket>280</bucket>
            </map>
            <map to='#d37295'>
              <bucket>743</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>322</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>810</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>369</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>863</bucket>
            </map>
            <map to='#e15759'>
              <bucket>253</bucket>
            </map>
            <map to='#e15759'>
              <bucket>670</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>214</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>613</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1571</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>65</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>478</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>917</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>295</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>759</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>255</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>673</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>94</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>495</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>921</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Start Station Id (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;3206&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3678&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3278&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bottom Start&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3192&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3481&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3213&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3207&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3679&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3193&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3483&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3270&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3273&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3184&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3279&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3267&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3194&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3638&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3214&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3220&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3269&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3272&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3275&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3209&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3681&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3205&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3640&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3280&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Top Start&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3225&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3210&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3187&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3281&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[End Station Id (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;3,183, 3,185, 3,186 and 7 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;224, 327, 358 and 7 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>3194</bucket>
            </map>
            <map to='#499894'>
              <bucket>3201</bucket>
            </map>
            <map to='#499894'>
              <bucket>3679</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3183</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3210</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3187</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3195</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3212</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3269</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3202</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3220</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3681</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3196</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3214</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3640</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3207</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3280</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3677</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3184</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3185</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3481</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3205</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3278</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3426</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3192</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3198</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3268</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3270</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3272</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3276</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3206</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3279</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3639</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3209</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3281</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3694</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3203</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3225</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3193</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3199</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3678</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3186</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3275</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3483</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3273</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3277</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3211</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3267</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3191</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3213</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3638</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[avg:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station name:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[avg:start station latitude:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station latitude:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station id:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:start station id:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[avg:end station longitude:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station longitude:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:gender:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:end station id:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:bikeid:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:Calculation_654710855973326851:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[avg:start station longitude:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station name:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:Calculation_654710855971569666:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[avg:end station latitude:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station latitude:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:end station id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#499894'>
              <bucket>29</bucket>
            </map>
            <map to='#499894'>
              <bucket>50</bucket>
            </map>
            <map to='#499894'>
              <bucket>70</bucket>
            </map>
            <map to='#499894'>
              <bucket>115</bucket>
            </map>
            <map to='#499894'>
              <bucket>153</bucket>
            </map>
            <map to='#499894'>
              <bucket>194</bucket>
            </map>
            <map to='#499894'>
              <bucket>362</bucket>
            </map>
            <map to='#499894'>
              <bucket>563</bucket>
            </map>
            <map to='#499894'>
              <bucket>1381</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>21</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>41</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>62</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>101</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>157</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>266</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>332</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>728</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>23</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>25</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>46</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>56</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>107</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>187</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>294</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>429</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>911</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#79706e'>
              <bucket>33</bucket>
            </map>
            <map to='#79706e'>
              <bucket>54</bucket>
            </map>
            <map to='#79706e'>
              <bucket>77</bucket>
            </map>
            <map to='#79706e'>
              <bucket>123</bucket>
            </map>
            <map to='#79706e'>
              <bucket>205</bucket>
            </map>
            <map to='#79706e'>
              <bucket>222</bucket>
            </map>
            <map to='#79706e'>
              <bucket>639</bucket>
            </map>
            <map to='#79706e'>
              <bucket>649</bucket>
            </map>
            <map to='#79706e'>
              <bucket>4577</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>30</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>51</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>71</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>116</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>175</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>196</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>393</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>579</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1435</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>47</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>67</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>104</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>186</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>310</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>441</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>935</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>19</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>60</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>92</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>141</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>258</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>318</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>702</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>42</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>63</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>102</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>160</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>267</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>335</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>859</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>37</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>58</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>83</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>134</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>239</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>265</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>692</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>27</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>48</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>68</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>113</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>120</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>343</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>502</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>938</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>24</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>34</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>55</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>78</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>130</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>212</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>224</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>675</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>35</bucket>
            </map>
            <map to='#d37295'>
              <bucket>66</bucket>
            </map>
            <map to='#d37295'>
              <bucket>79</bucket>
            </map>
            <map to='#d37295'>
              <bucket>131</bucket>
            </map>
            <map to='#d37295'>
              <bucket>225</bucket>
            </map>
            <map to='#d37295'>
              <bucket>228</bucket>
            </map>
            <map to='#d37295'>
              <bucket>685</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>38</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>59</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>91</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>139</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>246</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>279</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>698</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>20</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>40</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>61</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>143</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>324</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>354</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>711</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>31</bucket>
            </map>
            <map to='#e15759'>
              <bucket>52</bucket>
            </map>
            <map to='#e15759'>
              <bucket>73</bucket>
            </map>
            <map to='#e15759'>
              <bucket>121</bucket>
            </map>
            <map to='#e15759'>
              <bucket>182</bucket>
            </map>
            <map to='#e15759'>
              <bucket>206</bucket>
            </map>
            <map to='#e15759'>
              <bucket>456</bucket>
            </map>
            <map to='#e15759'>
              <bucket>604</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1663</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>28</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>49</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>69</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>114</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>140</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>191</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>560</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1334</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>44</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>64</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>109</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>169</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>273</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>347</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>864</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>16</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>36</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>57</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>80</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>132</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>229</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>257</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>690</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>32</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>53</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>74</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>122</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>204</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>220</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>490</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>610</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2006</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>14</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>45</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>65</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>106</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>179</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>283</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>355</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>902</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[End Station Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Top 10&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bottom 10&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Start Station Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Top 10&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bottom 10&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top and Bottom Ride End Stations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201904-citibike-tripdata' name='federated.1iuicnr18bh26314kcikj18vxfbp' />
          </datasources>
          <datasource-dependencies datasource='federated.1iuicnr18bh26314kcikj18vxfbp'>
            <column datatype='string' name='[End Station Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[end station name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Bottom 10&quot;'>
                  <value>&quot;Amsterdam Ave &amp; W 125 St&quot;</value>
                  <value>&quot;Broadway &amp; W 56 St&quot;</value>
                  <value>&quot;Christopher St &amp; Greenwich St&quot;</value>
                  <value>&quot;E 33 St &amp; 5 Ave&quot;</value>
                  <value>&quot;South End Ave &amp; Liberty St&quot;</value>
                  <value>&quot;Spruce St &amp; Nassau St&quot;</value>
                  <value>&quot;W 15 St &amp; 10 Ave&quot;</value>
                  <value>&quot;W 27 St &amp; 10 Ave&quot;</value>
                  <value>&quot;W 41 St &amp; 8 Ave&quot;</value>
                  <value>&quot;W 84 St &amp; Columbus Ave&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Top 10&quot;'>
                  <value>&quot;City Hall&quot;</value>
                  <value>&quot;Exchange Place&quot;</value>
                  <value>&quot;Grove St PATH&quot;</value>
                  <value>&quot;Hamilton Park&quot;</value>
                  <value>&quot;Harborside&quot;</value>
                  <value>&quot;Marin Light Rail&quot;</value>
                  <value>&quot;Newark Ave&quot;</value>
                  <value>&quot;Newport PATH&quot;</value>
                  <value>&quot;Newport Pkwy&quot;</value>
                  <value>&quot;Sip Ave&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[end station id]' derivation='Count' name='[cnt:end station id:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1iuicnr18bh26314kcikj18vxfbp].[Exclusions (End Station Name,End Station Name (group))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:end station name:nk]' />
                <groupfilter function='level-members' level='[End Station Name (group)]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[End Station Name (group)]' member='&quot;Other&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;5 Corners Library&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Astor Place&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Baldwin at Montgomery&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Bergen Ave&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Brunswick &amp; 6th&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Brunswick St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Christ Hospital&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Columbus Drive&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Communipaw &amp; Berry Lane&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Dey St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Dixon Mills&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Essex Light Rail&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Fairmount Ave&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Glenwood Ave&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Grand St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Heights Elevator&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hilltop&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Jackson Square&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;JC Medical Center&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;JCBS Depot&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Jersey &amp; 3rd&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Jersey &amp; 6th St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Journal Square&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Lafayette Park&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Leonard Gordon Park&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Liberty Light Rail&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Lincoln Park&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Manila &amp; 1st&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;McGinley Square&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Monmouth and 6th&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Montgomery St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Morris Canal&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Oakland Ave&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Paulus Hook&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Pershing Field&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Riverview Park&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Union St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Van Vorst Park&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Warren St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Washington St&quot;' />
                    <groupfilter function='member' level='[none:end station name:nk]' member='&quot;York St&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:end station name:nk]' />
                  <hierarchy name='[End Station Name (group)]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1iuicnr18bh26314kcikj18vxfbp].[Exclusions (End Station Name,End Station Name (group))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]' value='237' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[End Station Name (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]</rows>
        <cols>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]</cols>
      </table>
      <simple-id uuid='{0434733A-00A5-4A6B-9900-4B239C47446C}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Male to Female Riders</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201904-citibike-tripdata' name='federated.1iuicnr18bh26314kcikj18vxfbp' />
          </datasources>
          <datasource-dependencies datasource='federated.1iuicnr18bh26314kcikj18vxfbp'>
            <column caption='Gender Text' datatype='string' name='[Calculation_654710855967715328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [gender] = 0 THEN &apos;UNKOWN&apos;&#13;&#10;ELSEIF [gender] = 1 THEN &apos;MALE&apos;&#13;&#10;ELSEIF [gender] = 2 THEN &apos;FEMALE&apos;&#13;&#10;ELSE &apos;UNKNOWN&apos; END' />
            </column>
            <column-instance column='[Calculation_654710855967715328]' derivation='Count' name='[cnt:Calculation_654710855967715328:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_654710855967715328]' derivation='None' name='[none:Calculation_654710855967715328:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:Calculation_654710855967715328:nk]' />
              <wedge-size column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:Calculation_654710855967715328:qk]' />
              <size column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:Calculation_654710855967715328:qk]' />
              <text column='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:Calculation_654710855967715328:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2E0CC618-60D9-4591-AEE1-E6669BB41332}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trip Statistics</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201904-citibike-tripdata' name='federated.1iuicnr18bh26314kcikj18vxfbp' />
          </datasources>
          <datasource-dependencies datasource='federated.1iuicnr18bh26314kcikj18vxfbp'>
            <column caption='Age' datatype='integer' name='[Calculation_654710855970029569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2019-[birth year]' />
            </column>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Count' name='[cnt:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_654710855970029569]' derivation='None' name='[none:Calculation_654710855970029569:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[avg:tripduration:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1iuicnr18bh26314kcikj18vxfbp].[avg:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[:Measure Names]' />
              <text column='[federated.1iuicnr18bh26314kcikj18vxfbp].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:tripduration:qk] + [federated.1iuicnr18bh26314kcikj18vxfbp].[avg:tripduration:qk])</rows>
        <cols>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:Calculation_654710855970029569:qk]</cols>
      </table>
      <simple-id uuid='{2AA84112-9FB6-42F9-B35A-9DAB1F3CD789}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Distance Covered per Bike</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201904-citibike-tripdata' name='federated.1iuicnr18bh26314kcikj18vxfbp' />
          </datasources>
          <datasource-dependencies datasource='federated.1iuicnr18bh26314kcikj18vxfbp'>
            <column caption='Distance' datatype='real' name='[Calculation_654710855971569666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[tripduration]/(60*7.456)' />
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_654710855971569666]' derivation='Sum' name='[sum:Calculation_654710855971569666:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:bikeid:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:Calculation_654710855971569666:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:bikeid:ok]</rows>
        <cols>[federated.1iuicnr18bh26314kcikj18vxfbp].[sum:Calculation_654710855971569666:qk]</cols>
      </table>
      <simple-id uuid='{CC351730-E7C5-4E9C-94B5-502E934A7A2D}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ride Start Station Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201904-citibike-tripdata' name='federated.1iuicnr18bh26314kcikj18vxfbp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1iuicnr18bh26314kcikj18vxfbp'>
            <column-instance column='[end station id]' derivation='Count' name='[cnt:end station id:ok]' pivot='key' type='ordinal' />
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station latitude:ok]' value='false' />
            <format attr='in-tooltip' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station longitude:ok]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:ok]' />
              <lod column='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station latitude:ok]' />
              <lod column='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station longitude:ok]' />
              <lod column='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]' />
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1iuicnr18bh26314kcikj18vxfbp].[Latitude (generated)]</rows>
        <cols>[federated.1iuicnr18bh26314kcikj18vxfbp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E3CE9A01-F3F7-4737-A60F-D406B91C8571}' />
    </worksheet>
    <worksheet name='Sheet 6 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ride End Station Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201904-citibike-tripdata' name='federated.1iuicnr18bh26314kcikj18vxfbp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1iuicnr18bh26314kcikj18vxfbp'>
            <column-instance column='[start station name]' derivation='Count' name='[cnt:start station name:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station longitude:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station latitude:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]' />
              <size column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station name:ok]' />
              <lod column='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station latitude:qk]</rows>
        <cols>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{6AADAD7D-6991-447B-BB0E-3AC065ECEAA5}' />
    </worksheet>
    <worksheet name='Top and Bottom Ride Start Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top and Bottom Ride Start Stations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JC-201904-citibike-tripdata' name='federated.1iuicnr18bh26314kcikj18vxfbp' />
          </datasources>
          <datasource-dependencies datasource='federated.1iuicnr18bh26314kcikj18vxfbp'>
            <column datatype='string' name='[Start Station Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[start station name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Bottom 10&quot;'>
                  <value>&quot;Christ Hospital&quot;</value>
                  <value>&quot;Communipaw &amp; Berry Lane&quot;</value>
                  <value>&quot;Dey St&quot;</value>
                  <value>&quot;Glenwood Ave&quot;</value>
                  <value>&quot;Heights Elevator&quot;</value>
                  <value>&quot;Jackson Square&quot;</value>
                  <value>&quot;JCBS Depot&quot;</value>
                  <value>&quot;Lafayette Park&quot;</value>
                  <value>&quot;Riverview Park&quot;</value>
                  <value>&quot;Union St&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Top 10&quot;'>
                  <value>&quot;City Hall&quot;</value>
                  <value>&quot;Exchange Place&quot;</value>
                  <value>&quot;Grove St PATH&quot;</value>
                  <value>&quot;Hamilton Park&quot;</value>
                  <value>&quot;Harborside&quot;</value>
                  <value>&quot;Marin Light Rail&quot;</value>
                  <value>&quot;Newark Ave&quot;</value>
                  <value>&quot;Newport PATH&quot;</value>
                  <value>&quot;Newport Pkwy&quot;</value>
                  <value>&quot;Sip Ave&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1iuicnr18bh26314kcikj18vxfbp].[Exclusions (Start Station Name,Start Station Name (group))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:start station name:nk]' />
                <groupfilter function='level-members' level='[Start Station Name (group)]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Start Station Name (group)]' member='&quot;Other&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Corners Library&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Astor Place&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Baldwin at Montgomery&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bergen Ave&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Brunswick &amp; 6th&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Brunswick St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbus Drive&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dixon Mills&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Essex Light Rail&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fairmount Ave&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hilltop&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;JC Medical Center&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jersey &amp; 3rd&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jersey &amp; 6th St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Journal Square&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard Gordon Park&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Liberty Light Rail&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lincoln Park&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Manila &amp; 1st&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;McGinley Square&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Monmouth and 6th&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montgomery St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Morris Canal&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Oakland Ave&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Paulus Hook&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pershing Field&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Van Vorst Park&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Warren St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;York St&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:start station name:nk]' />
                  <hierarchy name='[Start Station Name (group)]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1iuicnr18bh26314kcikj18vxfbp].[Exclusions (Start Station Name,Start Station Name (group))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iuicnr18bh26314kcikj18vxfbp].[Start Station Name (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station id:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station id:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station id:qk]</rows>
        <cols>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]</cols>
      </table>
      <simple-id uuid='{250AE733-E787-4909-B217-E64E282E72F0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Citi Bike Usage</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='1026' />
        </style-rule>
      </style>
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' preset-index='11' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98118' id='1' param='vert' removable='false' type='layout-flow' w='98546' x='727' y='941'>
            <zone h='5882' id='3' type='title' w='98546' x='727' y='941' />
            <zone fixed-size='152' h='17882' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98546' x='727' y='6823' />
            <zone h='74354' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98546' x='727' y='24705'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='- We can see from this graph that the Grove St. Path station is by far the most popular location to start a ride from. It has almost dopuble tehs tats of the next most frequently used station which is Hamilton Park. &#10;- The least used station is JCBS Depot which has zero ride stats for April 2019.' captured-sheet='Top and Bottom Ride Start Stations' id='1' />
                  <story-point caption='- From this chart we also see that Grove St Path is also the most used station for ride end. This would indicate that it is a popular acticity to ride a bike along the path.&#10;- We can also see that the loeast used ride end stations have virtually zero drop off&apos;s. This could indicate that riders do not want to ride to these locations.' captured-sheet='Sheet 1 (2)' id='2' />
                  <story-point caption='- From the pie chart we can see that there are significantly more male riders than female riders. There should be furher investigationto this issue to determine how to alleviate the disparity.' captured-sheet='Sheet 2' id='3' />
                  <story-point caption='- This chart indiacated that people of the ages of 25-45 are the most frequent riders however their average trip length is not very different from that of older people.&#10;- This would indocate that there is a more consistent trend between trip length rather average age of rider' captured-sheet='Sheet 4' id='4' />
                  <story-point caption='- Depending on the suggested maintance invertal, there are several bikes that are well above 300-400 mile traveled. This could incidate that they are likely due for maintnance and that thi maintance interval will be required far sooner than that for other bikes.' captured-sheet='Sheet 5' id='5' />
                  <story-point caption='- Below we can see that the most popular statons are in the zip code of 07302. It is significantly more likely that riders will start from these stations as compared to the other ones outside of that zip code.' captured-sheet='Sheet 6' id='6'>
                    <capturedDeltas>
                      <worksheet name='Sheet 6'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[Latitude (generated)]' field-type='quantitative' max='4977751.5402635895' min='4969210.8638358135' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1iuicnr18bh26314kcikj18vxfbp].[Longitude (generated)]' field-type='quantitative' max='-8235135.7216929933' min='-8247392.6734651374' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='- From this map we can see that most trip do not end outside of the same zip code in which we saw that the majority of rides start. This could indicaste again that the average distance travelled is the most significant indicator of usage. - The same 07302 zip code also have the highest number of stations available which could indicate that there also could be an additional component of the availability of station that could contribute to use frequency.' captured-sheet='Sheet 6 (2)' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{71E766ED-D8AF-4680-99E8-218D376C2AA6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Top and Bottom Ride Start Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[Start Station Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[Start Station Id (group)]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[ctd:start station id:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station id:qk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5867F04C-66A5-48C1-A203-271186D79347}' />
    </window>
    <window class='worksheet' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[End Station Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[End Station Id (group)]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[End Station Name (group)]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[Start Station Id (group)]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[ctd:start station id:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station id:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station id:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station id:qk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B3F7A37-D2DA-4A34-AE16-583951D62A1F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:Calculation_654710855967715328:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:Calculation_654710855967715328:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:Calculation_654710855967715328:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:gender:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:Calculation_654710855967715328:nk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:birth year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2673E66B-6F00-4EE6-8F0A-A5337D1CE32E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='1' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6960003A-931A-40ED-8218-84C75B91C63E}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C94BEB4A-991A-4389-8A0D-4E2D9F551C8D}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station latitude:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station longitude:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5FBBBB3-9C70-4C6D-9E98-59B4C1EAC6CC}' />
    </window>
    <window class='worksheet' name='Sheet 6 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:start station name:ok]' type='size' />
            <card pane-specification-id='0' param='[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:ok]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[cnt:end station id:qk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:end station name:nk]</field>
            <field>[federated.1iuicnr18bh26314kcikj18vxfbp].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6642110A-D6B7-4C84-B6B6-950397F25D08}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{F1253787-8820-4D7B-9507-8731E160D9CB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Sheet 2' width='164'>
      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
      Fkc0DiLIuAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      HBybTDgGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top and Bottom Ride Start Stations' width='192'>
      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
      BcNDuy4q/SjPAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
